{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/caydendunn/Desktop/lireddit-web/src/pages/register.tsx\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react';\nexport const Register = ({}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: (values, handleChange) => /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: values.username,\n          onChange: handleChange,\n          id: \"username\",\n          placeholder: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }, this);\n};\nexport default Register;","map":{"version":3,"sources":["/Users/caydendunn/Desktop/lireddit-web/src/pages/register.tsx"],"names":["React","Formik","Form","FormControl","FormLabel","Input","Register","username","password","values","console","log","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,WAAT,EAAwCC,SAAxC,EAAmDC,KAAnD,QAAgE,kBAAhE;AAKA,OAAO,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AACjD,sBACQ,QAAC,MAAD;AACQ,IAAA,aAAa,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADvB;AAEQ,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACP,KAJT;AAAA,cAMS,CAACA,MAAD,EAASG,YAAT,kBACO,QAAC,IAAD;AAAA,6BACQ,QAAC,WAAD;AAAA,gCACQ,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ,QAAC,KAAD;AACQ,UAAA,KAAK,EAAIH,MAAM,CAACF,QADxB;AAEQ,UAAA,QAAQ,EAAIK,YAFpB;AAGQ,UAAA,EAAE,EAAC,UAHX;AAGsB,UAAA,WAAW,EAAC;AAHlC;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AAPhB;AAAA;AAAA;AAAA;AAAA,UADR;AAuBP,CAxBM;AA0BP,eAAeN,QAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react';\nimport { getValueTransition } from 'framer-motion/types/animation/utils/transitions';\n\ninterface registerProps {}\n\nexport const Register: React.FC<registerProps> = ({}) => {\n        return (\n                <Formik\n                        initialValues={{ username: \"\", password: \"\" }}\n                        onSubmit={(values) => {\n                                console.log(values);\n                        }}\n                > \n                        {(values, handleChange) => (\n                                <Form>\n                                        <FormControl >\n                                                <FormLabel htmlFor=\"username\">Username</FormLabel>\n                                                <Input \n                                                        value = {values.username}\n                                                        onChange = {handleChange}\n                                                        id=\"username\" placeholder=\"username\" />\n                                                {/*<FormErrorMessage>{form.errors.name}</FormErrorMessage>*/}\n                                        </FormControl>\n                                </Form>\n                        )}\n                </Formik>\n\n        );\n\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}