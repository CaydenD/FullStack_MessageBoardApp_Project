{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectDestructuringEmpty from \"/Users/caydendunn/Desktop/lireddit-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/caydendunn/Desktop/lireddit-web/src/pages/register.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { Wrapper } from '../components/Wrapper';\nexport var Register = function Register(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        console.log(values);\n      },\n      children: function children(values, handleChange) {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 49\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              value: values.username,\n              onChange: handleChange,\n              id: \"username\",\n              placeholder: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 49\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 41\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 33\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 17\n  }, _this);\n};\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/caydendunn/Desktop/lireddit-web/src/pages/register.tsx"],"names":["React","Formik","Form","FormControl","FormLabel","Input","Wrapper","Register","username","password","values","console","log","handleChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,WAAT,EAAwCC,SAAxC,EAAmDC,KAAnD,QAAgE,kBAAhE;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AAMA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAAS;AAAA;;AACvD,sBACa,QAAC,OAAD;AAAA,2BACQ,QAAC,MAAD;AACA,MAAA,aAAa,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OADf;AAEA,MAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACP,OAJD;AAAA,gBAMC,kBAACA,MAAD,EAASG,YAAT;AAAA,4BACO,QAAC,IAAD;AAAA,iCACQ,QAAC,WAAD;AAAA,oCACQ,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADR,eAEQ,QAAC,KAAD;AACQ,cAAA,KAAK,EAAIH,MAAM,CAACF,QADxB;AAEQ,cAAA,QAAQ,EAAIK,YAFpB;AAGQ,cAAA,EAAE,EAAC,UAHX;AAGsB,cAAA,WAAW,EAAC;AAHlC;AAAA;AAAA;AAAA;AAAA,qBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,iBADP;AAAA;AAND;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,WADb;AAwBF,CAzBM;KAAMN,Q;AA2Bb,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react';\nimport { getValueTransition } from 'framer-motion/types/animation/utils/transitions';\nimport { Wrapper } from '../components/Wrapper';\n\ninterface registerProps { \n\n}\n\nexport const Register: React.FC<registerProps> = ({ }) => {\n   return (\n                <Wrapper>\n                        <Formik\n                        initialValues={{ username: \"\", password: \"\" }}\n                        onSubmit={(values) => {\n                                console.log(values);\n                        }}\n                > \n                        {(values, handleChange) => (\n                                <Form>\n                                        <FormControl >\n                                                <FormLabel htmlFor=\"username\">Username</FormLabel>\n                                                <Input \n                                                        value = {values.username}\n                                                        onChange = {handleChange}\n                                                        id=\"username\" placeholder=\"username\" />\n                                                {/*<FormErrorMessage>{form.errors.name}</FormErrorMessage>*/}\n                                        </FormControl>\n                                </Form>\n                        )}\n                        </Formik>\n                </Wrapper>\n        );\n\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}